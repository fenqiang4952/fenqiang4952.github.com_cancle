[{"title":"css3美化checkbox","date":"2017-02-15T14:58:19.284Z","path":"2017/02/15/css3/css3美化checkbox/","text":"CSS美化的checkbox. HTML1234&lt;div class=&quot;checkbox_box&quot;&gt; &lt;input type=&quot;checkbox&quot; class=&quot;selectCheckBox&quot; id=checkBoxId checked=&quot;true&quot; /&gt; &lt;label for=checkBoxId&gt;&lt;span&gt;我要分享到APP作品大厅&lt;/span&gt;&lt;/label&gt;&lt;/div&gt; CSS1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253.content .shareBook .checkbox_box &#123; display: inline-block; position: relative; width: 25px; height: 25px; padding-left: 5px; line-height: 18px;&#125;.content .shareBook label &#123; cursor: pointer; position: absolute; width: 18px; height: 18px; top: 0; left: 0; background: #FFFFFF; border: 1px solid #FF9D00; border-radius: 2px;&#125;.content .shareBook label span &#123; width: 200px; display: inline-block; padding-left: 25px; font-weight: normal;&#125;.content .shareBook label:before &#123; opacity: 0.2; content: &apos;&apos;; position: absolute; width: 12px; height: 7px; background: transparent; top: 4px; left: 3px; border: 3px solid #FFFFFF; border-top: none; border-right: none; -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); transform: rotate(-45deg);&#125;.content .shareBook input[type=checkbox]:checked + label &#123; background: #FF9D00;&#125;.content .shareBook input[type=checkbox]:checked + label:before &#123; opacity: 1;&#125;","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yanfenqiang.com/tags/html5/"},{"name":"css3","slug":"css3","permalink":"http://yanfenqiang.com/tags/css3/"},{"name":"checkbox","slug":"checkbox","permalink":"http://yanfenqiang.com/tags/checkbox/"}]},{"title":"express入门","date":"2017-02-12T12:43:03.673Z","path":"2017/02/12/html5/express入门/","text":"创建一个myapp项目 安装12$ npm init$ npm install express --save hello world进入myapp目录，创建一个名为app.js的文件 键入以下内容12345678910111213var express = require(&apos;express&apos;);var app = express();app.get(&apos;/&apos;, function (req, res) &#123; res.send(&apos;Hello World!&apos;);&#125;);var server = app.listen(3000, function () &#123; var host = server.address().address; var port = server.address().port; console.log(&apos;Example app listening at http://%s:%s&apos;, host, port);&#125;); 上面的代码启动一个服务并监听从 3000 端口进入的所有连接请求。他将对所有 (/) URL 或 路由 返回 “Hello World!” 字符串。对于其他所有路径全部返回 404 Not Found。 通过如下命令启动程序,在浏览器中打开http://localhost:3000/ 查看效果1$ node app.js Express 应用生成器通过应用生成器工具 express 可以快速创建一个应用的骨架。 通过如下命令安装：1$ npm install express-generator -g 例如，下面的示例就是在当前工作目录下创建一个命名为myapp 的应用。12345678910111213141516171819$ express myapp create : myapp create : myapp/package.json create : myapp/app.js create : myapp/public create : myapp/public/javascripts create : myapp/public/images create : myapp/routes create : myapp/routes/index.js create : myapp/routes/users.js create : myapp/public/stylesheets create : myapp/public/stylesheets/style.css create : myapp/views create : myapp/views/index.jade create : myapp/views/layout.jade create : myapp/views/error.jade create : myapp/bin create : myapp/bin/www 安装所有依赖包,后启动应用：1$ DEBUG=myapp npm start window平台：1&gt; set DEBUG=myapp &amp; npm start 通过 Express 应用生成器创建的应用一般都有如下目录结构： 12345678910111213141516171819.├── app.js├── bin│ └── www├── package.json├── public│ ├── images│ ├── javascripts│ └── stylesheets│ └── style.css├── routes│ ├── index.js│ └── users.js└── views ├── error.jade ├── index.jade └── layout.jade7 directories, 9 files 一个简单的 Express 路由每一个路由都可以有一个或者多个处理器函数，当匹配到路由时，这个/些函数将被执行。 路由的定义由如下结构组成：app.METHOD(PATH, HANDLER)。其中，app 是一个 express 实例；METHOD 是某个 HTTP 请求方式中的一个；PATH 是服务器端的路径；HANDLER 是当路由匹配到时需要执行的函数。 下面的代码展示了几个路由实例：12345678910111213141516171819// 对网站首页的访问返回 &quot;Hello World!&quot; 字样app.get(&apos;/&apos;, function (req, res) &#123; res.send(&apos;Hello World!&apos;);&#125;);// 网站首页接受 POST 请求app.post(&apos;/&apos;, function (req, res) &#123; res.send(&apos;Got a POST request&apos;);&#125;);// /user 节点接受 PUT 请求app.put(&apos;/user&apos;, function (req, res) &#123; res.send(&apos;Got a PUT request at /user&apos;);&#125;);// /user 节点接受 DELETE 请求app.delete(&apos;/user&apos;, function (req, res) &#123; res.send(&apos;Got a DELETE request at /user&apos;);&#125;); 利用 Express 托管静态文件通过 Express 内置的 express.static 可以方便地托管静态文件，例如图片、CSS、JavaScript 文件等。 将静态资源文件所在的目录作为参数传递给 express.static 中间件就可以提供静态资源文件的访问了。例如，假设在 public 目录放置了图片、CSS 和 JavaScript 文件，你就可以： 1app.use(express.static(&apos;public&apos;)); 现在，public 目录下面的文件就可以访问了。12345http://localhost:3000/images/kitten.jpghttp://localhost:3000/css/style.csshttp://localhost:3000/js/app.jshttp://localhost:3000/images/bg.pnghttp://localhost:3000/hello.html 如果你希望所有通过 express.static 访问的文件都存放在一个“虚拟（virtual）”目录（即目录根本不存在）下面，可以通过为静态资源目录指定一个挂载路径的方式来实现，如下所示：1app.use(&apos;/static&apos;, express.static(&apos;public&apos;));","categories":[],"tags":[{"name":"express","slug":"express","permalink":"http://yanfenqiang.com/tags/express/"},{"name":"node","slug":"node","permalink":"http://yanfenqiang.com/tags/node/"}]},{"title":"css3自定义radio","date":"2017-02-12T12:03:24.283Z","path":"2017/02/12/html5/CSS3自定义radio/","text":"HTML部分代码123456789101112131415&lt;form action=&quot;#&quot;&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;div class=&quot;box&quot;&gt; &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; id=&quot;boy&quot; name=&quot;1&quot; /&gt;&lt;span&gt;&lt;/span&gt; &lt;/div&gt; &lt;label for=&quot;boy&quot;&gt;男&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;div class=&quot;box&quot;&gt; &lt;input type=&quot;radio&quot; id=&quot;girl&quot; name=&quot;1&quot; /&gt;&lt;span&gt;&lt;/span&gt; &lt;/div&gt; &lt;label for=&quot;girl&quot;&gt;女&lt;/label&gt; &lt;/div&gt;&lt;/form&gt; CSS代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849form &#123; border: 1px solid #ccc; padding: 20px; width: 300px; margin: 30px auto;&#125;.wrapper &#123; margin-bottom: 10px;&#125;.box &#123; display: inline-block; width: 30px; height: 30px; margin-right: 10px; position: relative; background: orange; vertical-align: middle; border-radius: 100%;&#125;.box input &#123; opacity: 0; position: absolute; top:0; left:0; width: 100%; height:100%; z-index:100;/*使input按钮在span的上一层，不加点击区域会出现不灵敏*/&#125;.box span &#123; display: block; width: 10px; height: 10px; border-radius: 100%; position: absolute; background: #fff; top: 50%; left:50%; margin: -5px 0 0 -5px; z-index:1;&#125;input[type=&quot;radio&quot;] + span &#123; opacity: 0;&#125;input[type=&quot;radio&quot;]:checked + span &#123; opacity: 1;&#125; 效果图预览","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yanfenqiang.com/tags/html5/"},{"name":"css3","slug":"css3","permalink":"http://yanfenqiang.com/tags/css3/"},{"name":"radio","slug":"radio","permalink":"http://yanfenqiang.com/tags/radio/"}]},{"title":"js向webview发送URL","date":"2017-02-12T11:58:10.616Z","path":"2017/02/12/html5/js向webview发送URL/","text":"1、在js中通过1window.location.href=&quot;MDWebBridge://PushWebView?url=&quot;+EncodeUtf8(_url_)+&quot;&amp;title=&quot;+EncodeUtf8(_title_); 向webview发送URL，其中MDWebBridge、PushWebView都是自定义的，只需保证js与native一致即可。 2、必须转码，通过EncodeUtrf8（）.12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182// 字符串转换utf-8 function EncodeUtf8(s1) &#123; // escape函数用于对除英文字母外的字符进行编码。如“Visit W3School!”-&gt;&quot;Visit%20W3School%21&quot; var s = escape(s1); var sa = s.split(&quot;%&quot;); //sa[1]=u6211 var retV = &quot;&quot;; if (sa[0] != &quot;&quot;) &#123; retV = sa[0]; &#125; for (var i = 1; i &lt; sa.length; i++) &#123; if (sa[i].substring(0, 1) == &quot;u&quot;) &#123; retV += Hex2Utf8(Str2Hex(sa[i].substring(1, 5))); if (sa[i].length &gt;= 6) &#123; retV += sa[i].substring(5); &#125; &#125; else retV += &quot;%&quot; + sa[i]; &#125; return retV; &#125;; function Str2Hex(s) &#123; var c = &quot;&quot;; var n; var ss = &quot;0123456789ABCDEF&quot;; var digS = &quot;&quot;; for (var i = 0; i &lt; s.length; i++) &#123; c = s.charAt(i); n = ss.indexOf(c); digS += Dec2Dig(eval(n)); &#125; //return value; return digS; &#125;; function Dec2Dig(n1) &#123; var s = &quot;&quot;; var n2 = 0; for (var i = 0; i &lt; 4; i++) &#123; n2 = Math.pow(2, 3 - i); if (n1 &gt;= n2) &#123; s += &apos;1&apos;; n1 = n1 - n2; &#125; else s += &apos;0&apos;; &#125; return s; &#125;; function Dig2Dec(s) &#123; var retV = 0; if (s.length == 4) &#123; for (var i = 0; i &lt; 4; i++) &#123; retV += eval(s.charAt(i)) * Math.pow(2, 3 - i); &#125; return retV; &#125; return -1; &#125;; function Hex2Utf8(s) &#123; var retS = &quot;&quot;; var tempS = &quot;&quot;; var ss = &quot;&quot;; if (s.length == 16) &#123; tempS = &quot;1110&quot; + s.substring(0, 4); tempS += &quot;10&quot; + s.substring(4, 10); tempS += &quot;10&quot; + s.substring(10, 16); var sss = &quot;0123456789ABCDEF&quot;; for (var i = 0; i &lt; 3; i++) &#123; retS += &quot;%&quot;; ss = tempS.substring(i * 8, (eval(i) + 1) * 8); retS += sss.charAt(Dig2Dec(ss.substring(0, 4))); retS += sss.charAt(Dig2Dec(ss.substring(4, 8))); &#125; return retS; &#125; return &quot;&quot;; &#125;;","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yanfenqiang.com/tags/html5/"},{"name":"移动端","slug":"移动端","permalink":"http://yanfenqiang.com/tags/移动端/"},{"name":"webview","slug":"webview","permalink":"http://yanfenqiang.com/tags/webview/"}]},{"title":"HTML5、formData移动浏览器上传图片","date":"2017-02-12T11:46:09.843Z","path":"2017/02/12/html5/HTML5、formData移动浏览器上传图片/","text":"#### 该上传方法对于不支持html5的浏览器无法使用。主要针对移动浏览器。 1、html12345678&lt;div class=&quot;upload_img&quot;&gt; &lt;div class=&quot;file&quot;&gt; &lt;span class=&quot;plus&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;text&quot;&gt;请拍照上传&lt;/span&gt; &lt;input class=&quot;fileupload&quot; type=&quot;file&quot; name=&quot;fangchanzheng1&quot; accept=&quot;image/*&quot; capture=&quot;camera&quot; /&gt; &lt;/div&gt; &lt;p class=&quot;info&quot;&gt; 房产证照片 &lt;/p&gt;&lt;/div&gt; type 是file 加上capture=”camera” 可以在移动端打开摄像头。 2、CSS修改上传文件按钮的css1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253.info &#123; text-align: center; height: 36px; line-height: 36px; color: #666666; font-size: 12px;&#125;.file .plus &#123; display: inline-block; width: 100%; font-size: 86px; text-align: center; line-height: 67px;&#125;.file .text &#123; position: absolute; display: block; bottom: 12px; width: 100%; text-align: center; height: 20px; line-height: 20px;&#125;.file &#123; position: relative; display: inline-block; background: #F3F3F3; border:1px solid #DCDCDC; color: #999999; border-radius: 0; text-decoration: none; text-indent: 0; line-height: 20px; font-size: 12px; letter-spacing: normal; width: 100%; height: 96px; overflow: hidden; text-align: center; line-height: 96px;&#125;.file input &#123; position: absolute; font-size: 100px; right: 0; top: 0; opacity: 0; width: 100%; height: 96px;&#125; 3、图片预览 图片预览使用了插件 https://github.com/blueimp/JavaScript-Load-Image 代码如下，给上传按钮绑定change事件，change后调用thumbnail方法，在方法内部，当图片加载完成后，创建图片dom等操作，展示预览的图片。由于要替换图片所以给上传文件的按钮设置一个属性zidingyiname,所以在替换图片的时候，通过该属性就可以区分这个按钮要替换图片，遍历filesList把重复了的zidingyiname的file给删除。 在这个方法的最后，把file对象push进filesList中，姑且认为这个是要上传的图片的数组。12345678910111213141516171819202122232425262728293031323334353637383940414243444546var filesList = [];var thumbnail = function (e) &#123; var $house_imgs = $(&quot;.house-img-upload&quot;).eq(0); var $IDcard_imgs = $(&quot;.IDcard-img-upload&quot;).eq(0); var This = $(this); loadImage( e.target.files[0], function (img) &#123; var $width = $(&quot;.file&quot;).eq(0).width(); var $heigth = &apos;96&apos;; // 设置图片显示的方法，这个方法应该拿出来，太忙了，没时间。 if ($width/$heigth &gt; $(img).attr(&apos;width&apos;)/$(img).attr(&apos;height&apos;)) &#123; var ratio = $heigth/$(img).attr(&apos;height&apos;); $(img).css(&#123; width: ratio*$(img).attr(&apos;width&apos;)+&apos;px&apos;, height: $heigth+&apos;px&apos; &#125;); &#125; else if($width/$heigth &lt; $(img).attr(&apos;width&apos;)/$(img).attr(&apos;height&apos;))&#123; var ratio = $width/$(img).attr(&apos;width&apos;); $(img).css(&#123; width: $width+&apos;px&apos;, height: ratio*$(img).attr(&apos;height&apos;)+&apos;px&apos; &#125;) &#125;else &#123; var ratio = $width/$(img).attr(&apos;width&apos;); $(img).css(&#123; width: $width+&apos;px&apos;, height: ratio*$(img).attr(&apos;height&apos;)+&apos;px&apos; &#125;) &#125; This.parent().find(&apos;.plus&apos;).remove().end().find(&apos;.text&apos;).remove().end().find(&apos;img&apos;).remove(); This.before($(img)); This.parent().parent().next().css(&apos;display&apos;,&apos;inline-block&apos;); &#125; ); e.target.files[0].zidingyiname = This.attr(&apos;name&apos;); for (var i=0,l=filesList.length;i&lt;l;i++) &#123; if (This.attr(&apos;name&apos;) == filesList[i].zidingyiname) &#123; filesList.splice(i,1) break; &#125; &#125; filesList.push(e.target.files[0]); &#125; $(&apos;.fileupload&apos;).bind(&apos;change&apos;,thumbnail); 4、图片上传 通过html5进行图片的上传，var formData = new FormData();创建formData对象，然后将需要上传的参数append到formData对象中。将上文提到的filesLlist进行遍历append到formData中。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253$(&quot;#submitOrder&quot;).on(&apos;click&apos;, function() &#123; var userName = $(&quot;#userName&quot;).val().trim(); var amount = $(&quot;#amount&quot;).val().trim(); var zhouqiSelect = $(&quot;#zhouqiSelect&quot;).find(&apos;select&apos;).eq(0).val(); // 从url中获取productId; var url = window.location.href; var productId = url.split(&quot;#&quot;)[1]; if (userName.length != 0 &amp;&amp; userName.length&lt;5 &amp;&amp; amount.length != 0 &amp;&amp;$(&quot;.house-img-upload&quot;).eq(0).find(&quot;img&quot;).length != 0) &#123; var $upload_loading = $(&quot;#upload_loading&quot;); $upload_loading.fadeIn(); var formData = new FormData(); for (var i=0,l=filesList.length;i&lt;l;i++) &#123; formData.append(filesList[i].zidingyiname,filesList[i]); &#125; formData.append(&apos;name&apos;,userName); formData.append(&apos;amount&apos;,amount); formData.append(&apos;zhouqi&apos;,zhouqiSelect); formData.append(&apos;productId&apos;,productId); formData.append(&apos;userId&apos;,$.cookie(&apos;userId&apos;)); formData.append(&apos;sectionId&apos;,$.cookie(&apos;sectionId&apos;)); formData.append(&apos;token&apos;,$.cookie(&apos;token&apos;)); $.ajax(&#123; url: urlEndPoint, //server script to process data type: &apos;POST&apos;, data: formData, cache: false, contentType: false, processData: false &#125;).done(function(res) &#123; $upload_loading.fadeOut(); CommonFn.saveCookie(&#123;&quot;tips&quot;:res.tips&#125;) var _url = &apos;./orderSuccess.html&apos;; CommonFn.turnPageByPlatform(_url); &#125;).fail(function(res) &#123; $upload_loading.fadeOut(); formData = null; alert(&apos;上传失败，请重新上传！&apos;); window.location.reload(); &#125;);; &#125; else&#123; alert(&quot;信息填写不正确！&quot;); &#125; &#125;);","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yanfenqiang.com/tags/html5/"},{"name":"移动端","slug":"移动端","permalink":"http://yanfenqiang.com/tags/移动端/"},{"name":"图片上传","slug":"图片上传","permalink":"http://yanfenqiang.com/tags/图片上传/"}]},{"title":"html5地理位置","date":"2017-02-12T11:27:44.979Z","path":"2017/02/12/html5/html5地理位置/","text":"1、判断设备是否支持地理位置1234567function getLocation() &#123; if (navigator.geolocation) &#123; navigator.geolocation.getCurrentPosition(showPosition); &#125; else &#123; x.innerHTML = &quot;该浏览器不支持获取地理位置。&quot;; &#125;&#125; 2、获取地理位置经纬度1234function showPosition(position) &#123; x.innerHTML = &quot;Latitude: &quot; + position.coords.latitude + &quot;&lt;br&gt;Longitude: &quot; + position.coords.longitude;&#125; 3、通过百度将经纬度转化成地理位置信息1234567891011121314151617181920212223function showPosition(position) &#123; var latlon = position.coords.latitude+&apos;,&apos;+position.coords.longitude; //baidu var url = &quot;http://api.map.baidu.com/geocoder/v2/?ak=C93b5178d7a8ebdb830b9b557abce78b&amp;callback=renderReverse&amp;location=&quot;+latlon+&quot;&amp;output=json&amp;pois=0&quot;; $.ajax(&#123; type: &quot;GET&quot;, dataType: &quot;jsonp&quot;, url: url, beforeSend: function()&#123; $(&quot;#demo&quot;).html(&apos;正在定位...&apos;); &#125;, success: function (json) &#123; if(json.status==0)&#123; $(&quot;#demo&quot;).html(json.result.addressComponent.city); &#125; &#125;, error: function (XMLHttpRequest, textStatus, errorThrown) &#123; $(&quot;#demo&quot;).html(latlon+&quot;地址位置获取失败&quot;); &#125; &#125;); &#125; 4、百度地图API返回的json示例：1234567891011121314151617181920212223242526&#123; &quot;status&quot;: 0, &quot;result&quot;: &#123; &quot;location&quot;: &#123; &quot;lng&quot;: 116.30235223778, &quot;lat&quot;: 39.979262964719 &#125;, &quot;formatted_address&quot;: &quot;北京市海淀区巴沟村87号&quot;, &quot;business&quot;: &quot;万柳,苏州桥,万泉河&quot;, &quot;addressComponent&quot;: &#123; &quot;adcode&quot;: &quot;110108&quot;, &quot;city&quot;: &quot;北京市&quot;, &quot;country&quot;: &quot;中国&quot;, &quot;direction&quot;: &quot;东南&quot;, &quot;distance&quot;: &quot;59&quot;, &quot;district&quot;: &quot;海淀区&quot;, &quot;province&quot;: &quot;北京市&quot;, &quot;street&quot;: &quot;巴沟村&quot;, &quot;street_number&quot;: &quot;87号&quot;, &quot;country_code&quot;: 0 &#125;, &quot;poiRegions&quot;: [], &quot;sematic_description&quot;: &quot;北京华联(万柳购物中心)东69米&quot;, &quot;cityCode&quot;: 131 &#125;&#125;","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yanfenqiang.com/tags/html5/"}]},{"title":"开始写博客","date":"2017-01-25T17:33:22.223Z","path":"2017/01/26/第一天/","text":"开始写博客现在的时间是2017年1月26日02:36:48，将近用了3个半小时，把这个完全搭建起来，凌晨5点还要起来坐火车回家。好累啊。 过年来了，就努力加油，向成为最顶尖的程序员而努力！","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yanfenqiang.com/tags/随笔/"}]}]